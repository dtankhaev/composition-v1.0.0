name: CI CD for api_yamdb_final project

on: [push]

jobs:
  tests:
    name: Проходим тесты
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v2

      - name: Установка python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.13

      - name: Установка зависимостей
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          cd api_yamdb/
          pip install -r requirements.txt

      - name: flake8 и запуск тестов
        run: |
          python -m flake8
          cd api_yamdb/
          python manage.py test

      - name: Запуск pytest
        run: |
          pytest

  build_and_push_to_docker_hub:
    name: пересобрать и отправить образ на DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./api_yamdb/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/yamdb_final_ci_cd:v1.03.19

  deploy:
    name: Деплой и запуск контейнера на боевом сервере
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # файл .env добавлен на сервер вручную
            sudo docker-compose down -v
            sudo docker-compose up -d --build
            sudo docker-compose exec -T web python manage.py migrate
            sudo docker-compose exec -T web python manage.py collectstatic --no-input

  send_message:
    name: Отправка отчета в телеграмм
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
